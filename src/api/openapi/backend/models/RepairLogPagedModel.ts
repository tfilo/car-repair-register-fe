/* tslint:disable */
/* eslint-disable */
/**
 * Car Repair Register API
 * Evidence of customers and vehicles for small workshops.
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PageMetadata } from './PageMetadata';
import {
    PageMetadataFromJSON,
    PageMetadataFromJSONTyped,
    PageMetadataToJSON,
    PageMetadataToJSONTyped,
} from './PageMetadata';
import type { RepairLog } from './RepairLog';
import {
    RepairLogFromJSON,
    RepairLogFromJSONTyped,
    RepairLogToJSON,
    RepairLogToJSONTyped,
} from './RepairLog';

/**
 * 
 * @export
 * @interface RepairLogPagedModel
 */
export interface RepairLogPagedModel {
    /**
     * 
     * @type {Array<RepairLog>}
     * @memberof RepairLogPagedModel
     */
    content?: Array<RepairLog>;
    /**
     * 
     * @type {PageMetadata}
     * @memberof RepairLogPagedModel
     */
    page?: PageMetadata;
}

/**
 * Check if a given object implements the RepairLogPagedModel interface.
 */
export function instanceOfRepairLogPagedModel(value: object): value is RepairLogPagedModel {
    return true;
}

export function RepairLogPagedModelFromJSON(json: any): RepairLogPagedModel {
    return RepairLogPagedModelFromJSONTyped(json, false);
}

export function RepairLogPagedModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): RepairLogPagedModel {
    if (json == null) {
        return json;
    }
    return {
        
        'content': json['content'] == null ? undefined : ((json['content'] as Array<any>).map(RepairLogFromJSON)),
        'page': json['page'] == null ? undefined : PageMetadataFromJSON(json['page']),
    };
}

  export function RepairLogPagedModelToJSON(json: any): RepairLogPagedModel {
      return RepairLogPagedModelToJSONTyped(json, false);
  }

  export function RepairLogPagedModelToJSONTyped(value?: RepairLogPagedModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'content': value['content'] == null ? undefined : ((value['content'] as Array<any>).map(RepairLogToJSON)),
        'page': PageMetadataToJSON(value['page']),
    };
}


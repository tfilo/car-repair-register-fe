/* tslint:disable */
/* eslint-disable */
/**
 * Car Repair Register API
 * Evidence of customers and vehicles for small workshops.
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Vehicle } from './Vehicle';
import {
    VehicleFromJSON,
    VehicleFromJSONTyped,
    VehicleToJSON,
    VehicleToJSONTyped,
} from './Vehicle';
import type { PageMetadata } from './PageMetadata';
import {
    PageMetadataFromJSON,
    PageMetadataFromJSONTyped,
    PageMetadataToJSON,
    PageMetadataToJSONTyped,
} from './PageMetadata';

/**
 * 
 * @export
 * @interface VehiclePagedModel
 */
export interface VehiclePagedModel {
    /**
     * 
     * @type {Array<Vehicle>}
     * @memberof VehiclePagedModel
     */
    content?: Array<Vehicle>;
    /**
     * 
     * @type {PageMetadata}
     * @memberof VehiclePagedModel
     */
    page?: PageMetadata;
}

/**
 * Check if a given object implements the VehiclePagedModel interface.
 */
export function instanceOfVehiclePagedModel(value: object): value is VehiclePagedModel {
    return true;
}

export function VehiclePagedModelFromJSON(json: any): VehiclePagedModel {
    return VehiclePagedModelFromJSONTyped(json, false);
}

export function VehiclePagedModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): VehiclePagedModel {
    if (json == null) {
        return json;
    }
    return {
        
        'content': json['content'] == null ? undefined : ((json['content'] as Array<any>).map(VehicleFromJSON)),
        'page': json['page'] == null ? undefined : PageMetadataFromJSON(json['page']),
    };
}

  export function VehiclePagedModelToJSON(json: any): VehiclePagedModel {
      return VehiclePagedModelToJSONTyped(json, false);
  }

  export function VehiclePagedModelToJSONTyped(value?: VehiclePagedModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'content': value['content'] == null ? undefined : ((value['content'] as Array<any>).map(VehicleToJSON)),
        'page': PageMetadataToJSON(value['page']),
    };
}


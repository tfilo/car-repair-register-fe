/* tslint:disable */
/* eslint-disable */
/**
 * Car Repair Register API
 * Evidence of customers and vehicles for small workshops.
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface VehicleUpdate
 */
export interface VehicleUpdate {
    /**
     * 
     * @type {string}
     * @memberof VehicleUpdate
     */
    registrationPlate: string;
    /**
     * 
     * @type {number}
     * @memberof VehicleUpdate
     */
    customerId: number;
    /**
     * 
     * @type {string}
     * @memberof VehicleUpdate
     */
    vin: string | null;
    /**
     * 
     * @type {string}
     * @memberof VehicleUpdate
     */
    engineCode: string | null;
    /**
     * 
     * @type {string}
     * @memberof VehicleUpdate
     */
    fuelType: string | null;
    /**
     * 
     * @type {number}
     * @memberof VehicleUpdate
     */
    enginePower: number | null;
    /**
     * 
     * @type {number}
     * @memberof VehicleUpdate
     */
    engineVolume: number | null;
    /**
     * 
     * @type {number}
     * @memberof VehicleUpdate
     */
    batteryCapacity: number | null;
    /**
     * 
     * @type {string}
     * @memberof VehicleUpdate
     */
    brand: string | null;
    /**
     * 
     * @type {string}
     * @memberof VehicleUpdate
     */
    model: string | null;
    /**
     * 
     * @type {number}
     * @memberof VehicleUpdate
     */
    yearOfManufacture: number | null;
}

/**
 * Check if a given object implements the VehicleUpdate interface.
 */
export function instanceOfVehicleUpdate(value: object): value is VehicleUpdate {
    if (!('registrationPlate' in value) || value['registrationPlate'] === undefined) return false;
    if (!('customerId' in value) || value['customerId'] === undefined) return false;
    if (!('vin' in value) || value['vin'] === undefined) return false;
    if (!('engineCode' in value) || value['engineCode'] === undefined) return false;
    if (!('fuelType' in value) || value['fuelType'] === undefined) return false;
    if (!('enginePower' in value) || value['enginePower'] === undefined) return false;
    if (!('engineVolume' in value) || value['engineVolume'] === undefined) return false;
    if (!('batteryCapacity' in value) || value['batteryCapacity'] === undefined) return false;
    if (!('brand' in value) || value['brand'] === undefined) return false;
    if (!('model' in value) || value['model'] === undefined) return false;
    if (!('yearOfManufacture' in value) || value['yearOfManufacture'] === undefined) return false;
    return true;
}

export function VehicleUpdateFromJSON(json: any): VehicleUpdate {
    return VehicleUpdateFromJSONTyped(json, false);
}

export function VehicleUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): VehicleUpdate {
    if (json == null) {
        return json;
    }
    return {
        
        'registrationPlate': json['registrationPlate'],
        'customerId': json['customerId'],
        'vin': json['vin'],
        'engineCode': json['engineCode'],
        'fuelType': json['fuelType'],
        'enginePower': json['enginePower'],
        'engineVolume': json['engineVolume'],
        'batteryCapacity': json['batteryCapacity'],
        'brand': json['brand'],
        'model': json['model'],
        'yearOfManufacture': json['yearOfManufacture'],
    };
}

  export function VehicleUpdateToJSON(json: any): VehicleUpdate {
      return VehicleUpdateToJSONTyped(json, false);
  }

  export function VehicleUpdateToJSONTyped(value?: VehicleUpdate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'registrationPlate': value['registrationPlate'],
        'customerId': value['customerId'],
        'vin': value['vin'],
        'engineCode': value['engineCode'],
        'fuelType': value['fuelType'],
        'enginePower': value['enginePower'],
        'engineVolume': value['engineVolume'],
        'batteryCapacity': value['batteryCapacity'],
        'brand': value['brand'],
        'model': value['model'],
        'yearOfManufacture': value['yearOfManufacture'],
    };
}

